{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","onSubmitContact","reset","onSubmit","this","className","styles","form","label","message","type","onChange","input","pattern","title","required","button","Component","Filter","onInput","prototype","PropTypes","string","isRequired","func","ContactList","contacts","onRemoveContact","contact","map","id","list","onClick","arrayOf","shape","App","filter","searchName","find","item","toUpperCase","formSubmitHandler","data","alert","nanoid","changeFilter","currentTarget","getVisibleContacts","toLowerCase","includes","removeContact","contactId","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b4634e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__Um6Oe\",\"input\":\"Filter_input__1Vxus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__H8Xog\",\"button\":\"ContactList_button__33jPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3KC-C\",\"form\":\"ContactForm_form__1wBEc\",\"label\":\"ContactForm_label__14IUk\",\"message\":\"ContactForm_message__ISf_y\",\"input\":\"ContactForm_input__3T_I-\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmitContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onHandleSubmit} className={styles.form }>\r\n        <label className={styles.label }>\r\n          <span className={styles.message }>Name</span>\r\n             <input\r\n          type=\"text\"\r\n          onChange={this.onHandleChange}\r\n          name=\"name\"\r\n            value={this.state.name}\r\n            className={styles.input }\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n        </label>\r\n     \r\n        <label className={styles.label }>\r\n          <span className={styles.message }>Number</span>\r\n          <input\r\n          type=\"tel\"\r\n          value={this.state.number}\r\n          onChange={this.onHandleChange}\r\n            name=\"number\"\r\n            className={styles.input }\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n        </label>\r\n        \r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitContact: PropTypes.func.isRequired,\r\n}\r\nexport default ContactForm;\r\n","import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (<div>\r\n        <label>\r\n        <h2 className={styles.title }>Find contact by name</h2>\r\n             <input\r\n          type=\"text\"\r\n          value={value}\r\n          onInput={onChange}\r\n          className={styles.input }\r\n          name=\"name\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n    </label>\r\n  </div>)\r\n}\r\nFilter.prototype = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n}\r\nexport default Filter;","import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nfunction ContactList({ contacts,onRemoveContact }) {\r\n    const contact = contacts.map(({id,name,number}) => (\r\n        <li key={id} className={styles.list }>\r\n            <span>{name + ` : ` + number}</span>\r\n            <button className={styles.button } type=\"button\" name=\"delte\" onClick={() => onRemoveContact(id)}>Delete</button>\r\n                </li>\r\n            ))\r\n    return (\r\n        <ul>\r\n            {contact }\r\n        </ul>\r\n        )\r\n}\r\n\r\nContactList.prototype = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,}).isRequired,).isRequired,\r\n    onRemoveContact:PropTypes.func.isRequired,\r\n}\r\nexport default ContactList;","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  searchName = value => {\n    return this.state.contacts.find(item => item.name.toUpperCase() === value.toUpperCase());\n  };\n  formSubmitHandler = data => {\n    const { name } = data;\n    if (this.searchName(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contact = { ...data, id: nanoid() };\n      this.setState(state => ({ contacts: [...state.contacts, contact] }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contacts => contacts.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  removeContact = contactId => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmitContact={this.formSubmitHandler} />\n\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onRemoveContact={this.removeContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}